# === Instalar protoc ===
sudo apt install -y protobuf-compiler  # Linux

# === Instalar los plugins de Go para gRPC ===
go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

# === Agregar $GOPATH/bin al PATH si no está configurado ===
export PATH="$PATH:$(go env GOPATH)/bin"

# === verificar qye este bien instalado ===
protoc-gen-go --version
protoc-gen-go-grpc --version

# === Crear el directorio para el Server ===
mkdir grpc-server && cd grpc-server
go mod init grpc-server
mkdir proto

# === Compilar el archivo proto  (primero moverse a la carpeta de server) ===
protoc --go_out=./proto --go-grpc_out=./proto proto/service.proto

# === mover los archivos generados por el comando anterior a la carpeta proto del grpc-client ===

# === crear server.go ===

# === Instalar Dependencias ===
#Desde la raíz de grpc-server, ejecuta
go get google.golang.org/grpc
go get google.golang.org/protobuf

# === actualiza los módulos ===
go mod tidy

#### === CLIENTE ===
# Dentro de la carpeta grpc-client, inicializa un módulo de Go:
go mod init grpc-client

# Instalar Dependencias.
#Desde la raíz de grpc-client, ejecuta
go get google.golang.org/grpc
go get google.golang.org/protobuf

# === Docker ===

# Server
docker build -t elianreyes/go_server_grpc_sop1:0.2 .
docker push elianreyes/go_server_grpc_sop1:0.2

# client
docker build -t elianreyes/go_client_grpc_sop1:0.4 .
docker push elianreyes/go_client_grpc_sop1:0.4

# kafka-consumer
docker build -t elianreyes/kafka-consumer:1.9 .
docker push elianreyes/kafka-consumer:1.9

#rust_api
docker build -t elianreyes/api-rust:0.1 .
docker push elianreyes/api-rust:0.1

#server rabbit
docker build -t elianreyes/server-rabbit:0.2 .
docker push elianreyes/server-rabbit:0.2

#rabbit consumer
docker build -t elianreyes/consumer-rabbit:0.2 .
docker push elianreyes/consumer-rabbit:0.2